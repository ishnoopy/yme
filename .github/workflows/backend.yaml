name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend  # This ensures commands run in the backend directory
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup QEMU # For multi-architecture builds as we are building for arm64
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx # For multi-architecture builds as we are building for arm64
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: backend  # This points to the backend directory for building
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
          platforms: linux/arm64,linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Print first 5 lines of SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" | head -n 5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy docker compose file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker/docker-compose.yaml"
          target: "/root/docker/yme/"
          strip_components: 2
          overwrite: true
          debug: true
    
      - name: SSH and deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd docker/yme/docker
            docker compose pull
            docker rmi $(docker images -f "dangling=true" -q)
            docker compose up -d
            echo "Backend deployment successful"